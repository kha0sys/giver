rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones comunes
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isEmailVerified() {
      return isAuthenticated() && request.auth.token.email_verified == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Reglas para usuarios
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // No permitimos eliminar usuarios
    }

    // Reglas para causas
    match /causes/{causeId} {
      // Cualquier usuario autenticado y verificado puede leer las causas
      allow read: if isEmailVerified();
      
      // Solo usuarios verificados pueden crear causas
      allow create: if isEmailVerified() && 
                   request.resource.data.creatorId == request.auth.uid;
      
      // El creador puede actualizar la causa
      allow update: if isEmailVerified() && 
                   resource.data.creatorId == request.auth.uid;
      
      // No permitimos eliminar causas
      allow delete: if false;
    }

    // Reglas para productos
    match /products/{productId} {
      // Cualquier usuario autenticado y verificado puede leer los productos
      allow read: if isEmailVerified();
      
      // Solo usuarios verificados pueden crear productos
      allow create: if isEmailVerified() && 
                   request.resource.data.creatorId == request.auth.uid;
      
      // El creador puede actualizar el producto
      allow update: if isEmailVerified() && 
                   resource.data.creatorId == request.auth.uid;
      
      // No permitimos eliminar productos
      allow delete: if false;
    }
  }
}
